from crewai.flow.flow import Flow, start, listen, router
from dotenv import load_dotenv
from litellm import completion
import random
from fpdf import FPDF
from datetime import datetime
import os

class RouteFlow(Flow):
    model = "gemini/gemini-1.5-flash"
    
    def __init__(self):
        super().__init__()
        self.current_city = None

    @start()
    def greeting(self):
        print("Assalam-o-Alaikum")
        
    @router(greeting)
    def select_city(self):
        cities = ["Islamabad", "Karachi", "Lahore", "Quetta", "Peshawar"]
        self.current_city = random.choice(cities)
        print(self.current_city)
        return self.current_city
        
    @listen(select_city)
    def generate_fun_fact(self, city_name):
        self.current_city = city_name
        result = completion(
            model=self.model,
            messages=[{"role": "user", "content": f"write some fun fact about {city_name} city."}]
        )
        fun_fact = result['choices'][0]['message']['content']
        print(fun_fact)
        return fun_fact
    
    @listen(generate_fun_fact)
    def save_fun_fact(self, fun_fact):
        # Create a timestamp and filename
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        city_name = self.current_city.lower().replace(" ", "_")
        filename = f"fun_facts_{city_name}_{timestamp}.pdf"
        
        # Create 'pdfs' directory if it doesn't exist
        if not os.path.exists('pdfs'):
            os.makedirs('pdfs')
        
        # Full path for the PDF file
        filepath = os.path.join('pdfs', filename)
        
        pdf = FPDF()
        pdf.set_auto_page_break(auto=True, margin=15)
        pdf.add_page()
        
        # Clean the text to remove problematic characters
        fun_fact = fun_fact.replace('â€“', '-')  # Replace em dash with regular hyphen
        fun_fact = fun_fact.encode('ascii', 'replace').decode()  # Replace non-ASCII chars
        
        # Add a title
        pdf.set_font("Arial", 'B', size=24)
        pdf.set_text_color(0, 50, 150)  # Dark blue color
        pdf.cell(0, 20, txt="Fun Facts About Pakistani Cities", ln=True, align='C')
        
        # Add city name as subtitle
        pdf.set_font("Arial", 'B', size=18)
        pdf.set_text_color(46, 139, 87)  # Sea green color
        pdf.cell(0, 15, txt=f"Discovering {self.current_city}", ln=True, align='C')
        
        # Add a decorative line
        pdf.set_draw_color(128, 0, 0)  # Dark red color
        pdf.line(20, pdf.get_y(), 190, pdf.get_y())
        pdf.ln(10)  # Add some space
        
        # Add "Did You Know?" subheading
        pdf.set_font("Arial", 'B', size=14)
        pdf.set_text_color(165, 42, 42)  # Brown color
        pdf.cell(0, 10, txt="Did You Know?", ln=True, align='L')
        pdf.ln(5)  # Add some space
        
        # Add content
        pdf.set_text_color(0, 0, 0)  # Black color for main text
        pdf.set_font("Arial", '', size=12)  # Regular font for all facts
        
        # Process and clean the fun facts
        facts = [line.strip() for line in fun_fact.split('\n') if line.strip()]
        unique_facts = []
        for fact in facts:
            # Remove duplicates and incomplete lines
            if fact not in unique_facts and len(fact.split()) > 5:
                unique_facts.append(fact)
        
        # Add the facts with simple formatting
        for fact in unique_facts:
            if fact.startswith('*'):
                fact = fact.replace('*', '').strip()
            if '**' in fact:
                fact = fact.replace('**', '')
            
            pdf.cell(10, 10, txt="*", ln=0)
            pdf.multi_cell(0, 10, txt=fact, align='L')
            pdf.ln(2)
        
        # Add footer
        pdf.set_y(-30)
        pdf.set_font("Arial", 'I', size=10)
        pdf.set_text_color(128, 128, 128)  # Gray color
        pdf.cell(0, 10, txt="Generated by Muhammad Abdul Qadir", align='C')
            
        pdf.output(filepath)
    
def kickoff():
    obj = RouteFlow()
    obj.kickoff()
 
def plot():
    obj = RouteFlow()
    obj.plot()
